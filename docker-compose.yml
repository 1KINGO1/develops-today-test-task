version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://admin:admin@postgres:5432/main?schema=public
      ORIGIN: http://localhost
    depends_on:
      - postgres
    networks:
      - app-network
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: http://localhost/api/
    environment:
      API_URL: http://backend:3000/api/
    container_name: frontend
    restart: unless-stopped
    depends_on:
      - backend
    networks:
      - app-network
  postgres:
    image: postgres:latest
    container_name: my_postgres
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: main
    networks:
      app-network:
    volumes:
      - postgres-data:/var/lib/postgresql/data
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  postgres-data:
networks:
  app-network:
